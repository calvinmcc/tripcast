@import "bourbon";
@import "users";
@import "neat";
@import "pace";
@import "form";

$blue: rgba(80, 185, 224, 0.6);
$accent: rgba(80, 185, 224, 0.6);
$input: rgb(255, 203, 60);
$yellow: rgb(255, 203, 60);
$lightyellow: rgb(255, 234, 97);
$red: rgb(238, 99, 99);
$green: rgba(190, 227, 128, 1);

$font: 'Hammersmith One', sans-serif;
$body: 'Gudea', sans-serif;

@mixin all-but($num) {
  &:not(:nth-child(#{$num})) {
    @content
  }
}

$responsive-nav-hit-area:   44px;
$responsive-nav-icon-size:  16px;
$responsive-nav-color:      $yellow;
$responsive-nav-background: black;
$responsive-nav-borders:    white;

/**
 * An element (`nav`) in which to house our dropdown.
 *
 * 1. Make sure we can’t actually see the absolutely positioned dropdown.
 */
.responsive-nav {
    position: relative;
    font-family: $body;
    z-index: 1;
    width:  $responsive-nav-hit-area;
    height: $responsive-nav-hit-area;
    color: $responsive-nav-color;
    background-color: $responsive-nav-background;
    overflow: hidden; /* [1] */
    border-radius: 3px;
    cursor: pointer;

    /**
     * Make the wrapper element lie horizontally on wider viewports.
     * Nasty RWD makes us undo a lot of stuff :(
     */
    @media screen and (min-width: 720px) {
        position: static;
        width:  auto;
        height: auto;
        background: none;
        color: $responsive-nav-background;
    }

    /**
     * Place a hamburger (don’t hate the player, hate the game...) icon
     * over the top of our nav element.
     */
    &:after {
        content: "☰";
        font-size: $responsive-nav-icon-size;
        width: 1em;
        line-height: 1;
        text-align: left;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top:  -($responsive-nav-icon-size / 2);
        margin-left: -($responsive-nav-icon-size / 2);

        /**
         * Remove the hamburger on wider viewports.
         */
        @media screen and (min-width: 720px) {
            content: normal;
            content: none;
        }

    }

/**
 * When we add this class, we simply allow the absolutely positioned
 * dropdown to be seen.
 */
    &.is-open {
        overflow: visible;

        /**
         * Change the hamburger to a cross when the nav is open.
         */
        &:after {
            content: "✕";

            /**
             * Remove the cross on wider viewports.
             * We have to repeat this chunk because of limitations with Sass.
             */
            @media screen and (min-width: 720px) {
                content: normal;
                content: none;
            }

        }

    }

}

    /**
     * The absolutely positioned dropdown of links.
     *
     * 1. Position the dropdown underneath the trigger.
     */
.responsive-nav__list {
    list-style: none;
    margin:  0;
    padding: 0;
    padding-top: $responsive-nav-hit-area;
    position: absolute;
    top:   0;
    right:  0;
    background-color: $responsive-nav-background;
    width: 250px;
    border-radius: 3px;
    z-index: -1; /* [1] */

        /**
         * Un-position the dropdown on larger viewports.
         * More nasty RWD undoing stuff :(
         */
        @media screen and (min-width: 720px) {
            padding-top: 0;
            position: static;
            width: auto;
            display: block;
            background: none;
            text-align: left;
        }

}

.responsive-nav__item {
    border-top: 1px solid $responsive-nav-borders;

        @media screen and (min-width: 720px) {
            display: inline-block;
            border-top: none;
        }
        & a:hover {
          color: rgb(97, 124, 208);
        }

}

/**
* 1. Ensure that the link text lines up with the hamburger.
* 2. Ensure that the link text is the same height as the trigger.
*/
.responsive-nav__link {
  color: $responsive-nav-color;
  display: block;
  white-space: nowrap;
  padding-right: ($responsive-nav-hit-area - $responsive-nav-icon-size) / 2; /* [1] */
  padding-left:  ($responsive-nav-hit-area - $responsive-nav-icon-size) / 2; /* [1] */
  line-height: $responsive-nav-hit-area; /* [2] */

  @media screen and (min-width: 720px) {
      color: $responsive-nav-background;
  }
}

.navbar {
  width: inherit;
  background-color: white;
  font-family: $font;
  padding-right: 10px;
  z-index: 99999999;
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  flex-basis: 70px;
  flex-shrink: 0;
  align-items: center;
}

// @media (max-width: 600px) {
//   .navbar {
//     position: sticky;
//   }
// }

@media (max-width: 600px) {
  main {
    flex-direction: column;
    height: 200%;
    width: 100%;
  }
}

@media (max-width: 600px) {
  #map {
    margin-top: 10vh;
    margin-right: 0;
    z-index: 9999;
  }
}

main {
  display: flex;
  height: 200vh;
}

.navbar-left {
  margin-right: 10px;
  text-align: left;
  z-index: 99999999;
  color: black;
  font-family: $body;
  letter-spacing: 1.2px;
  transition: color, .5s;
  transition: font-weight, .5s;
  display: flex;
  align-items: center;
  justify-content: space-around;
  & a {
    padding: 4px;
    @include all-but(3)
    {
      border-left: 1px solid black;
      border-right: 1px solid black;
    }
  }
  & img {
    max-height: 1.8em;
  }
}

.clickInstructions {
  position: absolute;
  color: white;
  margin-top: 150px;
  margin-left: 500px;
  z-index: 999999999999;
}

.title {
  z-index: 99999999;
  color: black;
  font-size: 2.2em;
  text-align: right;
  margin-left: 10px;
}

@media (max-width: 600px) {
  .title {
    font-size: 1.2em;
  }
}

#map {
  height: 100%;
  width: 100%;
  margin-right: 0;
  position: relative;
  overflow: hidden;
  flex: 3;
}

.alert {
  color: red;
  text-decoration: underline;
}

#forecast {
  font-family: $body;
}

input {
  margin-top: 1%;
  font-size: 14px;
  font-family: $body;
  width: 98%;
  border: 1px solid $input;
  transition: border 1s;
  height: 2em;
  &:focus {
    outline: none;
    border: 1px solid $accent;
  }
}

html, body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  position: static;
  display: flex;
  flex-flow: column;
}

@media (max-width: 600px) {
  html, body {
    height: 200vh;
    margin-right: 0;
  }
}

#directionsPanel {
  display: flex;
  flex-flow: column;
  position: relative;
  font-family: $body;
  background-color: white;
  padding-top: 1%;
  width: 100%;
  flex: 1;
  margin-left: 10px;
}

#stepList {
  position: relative;
  width: 100%;
  height: 100%;
  list-style: none;
  padding: 0;
  list-style-type: none;
  overflow: scroll;
}

@media (max-width: 600px) {
  #stepList {
    position: absolute;
    margin-top: 195vh;
    height: 40vh;
  }
}

#instruction {
  display: flex;
}

.directionList {
  max-height: inherit;
}

.buttons {
  width: 90%;
  display: flex;
  flex-flow: row;
  justify-content: center;
}

.options {
  width: 90%;
  display: flex;
  flex-flow: row;
  justify-content: space-around;
  padding: 10px;
}

.option-labels {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

#go {
  width: 50px;
  height: 50px;
  background-color: $green;
  color: black;
  padding: .5em;
  border-radius: 50%;
  margin-left: 10px;
  border: none;
  font-family: $font;
  font-size: .9em;
  transition: background-color, 1s, color, .25s;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  &:hover {
    background-color: darken($green, 20%);
    color: white;
  }
  &:focus {
    outline: none;
  }
}

#save {
  @extend #go;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: $lightyellow;
  &:hover {
    background-color: darken($lightyellow, 12%);
  }
}

#delete {
  @extend #go;
  margin-top: 1%;
  background-color: $red;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  padding: .5em;
  &:hover {
    background-color: darken($red, 20%);
  }
}

#footer {
  @extend .navbar;
  margin-bottom: 0;
  border-bottom: none;
  color: black;
  font-size: 2.2em;
  justify-content: flex-end;
  z-index: 0;
  flex-grow: 0;
  flex-shrink: 0;
  img {
    position: relative;
    max-height: 1.2em;
  }
}

#darksky {
  z-index: 99999999;
  max-height: 1.2em;
}

a {
  text-decoration: none;
  color: inherit;
  transition: color, .5s;
  &:clicked {
    color: inherit;
  }
}

.label-switch {
  $action-color: $yellow !default;
  $base-background-color: $yellow !default;
  $switch-width: 40px;
  $switch-padding: 2px;
  $switch-height: 20px;
  $switch-radius: $switch-height;
  $knob-size: $switch-height - ($switch-padding * 2);
  $knob-radius: $switch-height - ($switch-padding * 2);
  $knob-width: $knob-size;
  $switch-background: white;
  $switch-border-background: darken($base-background-color, 9%);
  $switch-shadow: 0 2px 5px transparentize(black, 0.6);

  border-radius: $switch-radius;
  cursor: pointer;
  display: inline-block;
  height: $switch-height;
  position: relative;
  width: $switch-width;

  input[type="checkbox"] {
    display: none;

    + .checkbox {
      background: $switch-border-background;
      display: inline-block;
      border: 0;
      border-radius: $switch-radius;
      cursor: pointer;
      height: $switch-height;
      margin: 0;
      padding: 0;
      position: relative;
      transition: all 0.3s ease;
      width: $switch-width;
      z-index: 0;

      &::before {
        @include position(absolute, 2px 0 0 2px);
        background: white;
        border-radius: $switch-radius;
        content: "";
        height: $knob-radius;
        transform: scale(1);
        transition: all 0.3s ease;
        width: $switch-width - ($switch-padding * 2);
        z-index: 1;
      }

      &::after {
        @include position(absolute, 2px 0 0 2px);
        @include size($knob-size);
        background: $switch-background;
        border-radius: $knob-radius;
        box-shadow: $switch-shadow;
        content: "";
        transition: all 0.3s ease;
        z-index: 2;
      }
    }

    &:checked {
      + .checkbox {
        background: $yellow;

        &::before {
          transform: scale(0);
        }

        &::after {
          left: $switch-width - $knob-width - ($switch-padding);
        }
      }
    }
  }
}

.trip-title {
  font-family: $body;
  letter-spacing: 1.5px;
  font-size: 30px;
  text-align: center;
}

.cards {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;
}

.card {
  $base-border-color: gainsboro !default;
  $base-border-radius: 3px !default;
  $base-background-color: white !default;
  $base-spacing: 1.5em !default;
  $action-color: #477DCA !default;
  $dark-gray: #333 !default;
  $base-font-color: $dark-gray !default;
  $card-border-color: $base-border-color;
  $card-border: 1px solid $card-border-color;
  $card-background: lighten($card-border-color, 10%);
  $card-header-background: $card-background;
  $card-margin: 1em;
  $card-image-hover-opacity: 0.7;
  $card-image-hover-color: #F8F2B4;

  background-color: $card-background;
  font-style: $body;
  border: $card-border;
  border-radius: $base-border-radius;
  box-shadow: 0 2px 4px darken($base-background-color, 10%);
  cursor: pointer;
  flex-basis: 15em;
  flex-grow: 1;
  margin: 0 $card-margin $base-spacing $card-margin;
  position: relative;
  transition: all 0.2s ease-in-out;
  max-width: 300px;

  .card-image {
    background-color: $card-image-hover-color;
    height: 150px;
    max-height: 150px;
    overflow: hidden;

    img {
      @include border-top-radius($base-border-radius);
      opacity: 1;
      transition: all 0.2s ease-in-out;
      width: 100%;
    }
  }

  .card-header {
    font-family: $body;
    background-color: $card-header-background;
    border-bottom: $card-border;
    border-radius: $base-border-radius $base-border-radius 0 0;
    font-weight: bold;
    line-height: 1.5em;
    padding: ($base-spacing / 3) ($base-spacing / 2);
    transition: all 0.2s ease-in-out;
  }

  .card-copy {
    font-family: $body;
    font-size: 0.9em;
    line-height: 1.5em;
    padding: ($base-spacing / 2) ($base-spacing / 2);

    p {
      margin: 0 0 ($base-spacing / 2);
    }
  }

  &:focus,
  &:hover {
    cursor: pointer;

    img {
      opacity: $card-image-hover-opacity;
    }
  }

  &:active {
    background-color: $card-background;

    .card-header {
      background-color: $card-background;
    }
  }
}

.comment {
  $base-border-radius: 3px !default;
  $base-spacing: 1.5em !default;
  $action-color: #477DCA !default;
  $dark-gray: #333 !default;
  $base-font-color: $dark-gray !default;
  $comment-gutter: 1.4em;
  $comment-image-padding: 0;
  $comment-image-width: 4em;
  $comment-color: $base-font-color;
  $comment-background: lighten($action-color, 15%);
  $comment-detail-color: transparentize($comment-color, 0.5);
  $comment-image-vert-alignment: top;

  border-bottom: 1px solid transparentize($comment-color, 0.9);
  display: table;
  margin-bottom: $base-spacing;
  padding-bottom: 1em;
  width: 100%;

  .comment-image,
  .comment-content {
    display: table-cell;
    vertical-align: $comment-image-vert-alignment;
  }

  .comment-image {
    padding-right: $comment-gutter;

    > img {
      background: rgb(209, 209, 209);
      border-radius: 50%;
      display: block;
      height: auto;
      max-width: none;
      width: $comment-image-width;
    }

    .comment-reverse-order & {
      padding-left: 10px;
      padding-right: 0;
    }
  }

  .comment-content {
    width: 100%;

    h1 {
      font-size: 1em;
      margin: 0 0 0.5em 0;
    }

    p {
      line-height: 1.5em;
      margin-bottom: 0.5em;
    }

    p.comment-detail {
      color: $comment-detail-color;
      font-size: 0.9em;
      font-style: italic;
    }
  }
}

.tooltip-item {
  $base-border-color: gainsboro !default;
  $base-border-radius: 3px !default;
  $base-line-height: 1.5em !default;
  $dark-gray: #333 !default;
  $base-font-color: $dark-gray !default;
  $tooltip-background: white;
  $tooltip-color: $base-font-color;
  $tooltip-max-width: 16em;
  $tooltip-arrow-width: 8px;
  $tooltip-shadow: 0 2px 2px silver;
  $tooltip-distance-from-item: 3em;
  $tooltip-arrow-distance-from-box: -1.3em;

  background: $tooltip-background;
  border: 1px solid $base-border-color;
  border-radius: 50%;
  display: flex;
  padding: 1%;
  position: relative;
  text-align: center;
  justify-content: center;
  align-items: center;
  height: 21.5px;
  width: 21.5px;
  margin-left: 3%;
  &:focus,
  &:hover .tooltip {
    opacity: 1;
    visibility: visible;
  }

  .tooltip {
    @include position(null, null null $tooltip-distance-from-item null);
    top: -89px;
    left: -87px;
    background-color: $tooltip-background;
    background: #fff;
    border-radius: $base-border-radius;
    box-shadow: $tooltip-shadow;
    color: $tooltip-color;
    font-size: 0.9em;
    line-height: 1.5em;
    margin: 0 auto;
    position: absolute;
    width: 200px;
    opacity: 0;
    padding: 1em;
    text-align: center;
    transition: all 0.2s ease-in-out;
    visibility: hidden;
    z-index: 10;

    p {
      color: $base-font-color;
      line-height: $base-line-height;
      margin: 0;
    }

    &::after {
      @include position(absolute, null 0);
      border: $tooltip-arrow-width solid transparent;
      bottom: $tooltip-arrow-distance-from-box;
      color: $tooltip-background;
      content: "▼";
      font-size: 1.4em;
      margin-left: -$tooltip-arrow-width;
      text-align: center;
      text-shadow: $tooltip-shadow;
    }
  }
}
